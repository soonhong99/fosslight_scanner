name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Build with PyInstaller
      run: |
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          docker run --rm -v $PWD:/work -w /work multiarch/ubuntu-core:arm64-focal /bin/bash -c "apt-get update && apt-get install -y python3-pip && pip3 install pyinstaller && pyinstaller --onefile fosslight_wrapper_ubuntu.py"
        else
          pyinstaller --onefile fosslight_wrapper_ubuntu.py
        fi
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/fosslight_wrapper_ubuntu
        asset_name: fosslight_wrapper_ubuntu-${{ matrix.arch }}
        asset_content_type: application/octet-stream

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller --onefile fosslight_wrapper.py
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: .\dist\fosslight_wrapper.exe
        asset_name: fosslight_wrapper.exe
        asset_content_type: application/vnd.microsoft.portable-executable

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller --onefile fosslight_wrapper_mac.py
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/fosslight_wrapper_mac
        asset_name: fosslight_wrapper_mac
        asset_content_type: application/octet-stream